name: Automate Docker Image Build & Push to Quay.io Registry CI

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      release:
        required: true
        type: string

jobs:   
  tests:
    uses: ./.github/workflows/tox-tests.yml
  build:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ID }}
          password: ${{ secrets.QUAY_PW }}
      - uses: actions/checkout@v4
      - name: Get version
        id: getversion
        run:
          pip install pytractions &&
          echo "::set-output name=version::$(python setup.py --version)"
      - name: Get name
        id: getname
        run:
          pip install pytractions &&
          echo "::set-output name=pkgname::$(python setup.py --name)"
      - name: Get commit revision
        id: getrev
        run: echo "::set-output name=rev::$(git rev-parse --short HEAD)"
      - name: Building & Pushing Docker Image
        run: |
          VERSION="${{ steps.getversion.outputs.version }}"
          RELEASE="${{ inputs.release }}"
          REV="${{ steps.getrev.outputs.rev }}"
          FINAL_VERSION=$([ "$RELEASE" = "true" ] && echo "${VERSION}" || echo "${VERSION}-${REV}")
          EXPIRE_LABEL=$([ "$RELEASE" = "true" ] && echo "" || echo "--label quay.expires-after=2d")
          FULL_VERSION="${VERSION}${REV}"
          python setup.py sdist
          docker build --build-arg=SDIST="dist/${{steps.getname.outputs.pkgname}}-${{steps.getversion.outputs.version}}.tar.gz"  -t quay.io/jluza/${{steps.getname.outputs.pkgname}}:$FINAL_VERSION $EXPIRE_LABEL -f docker/Dockerfile .
          docker push quay.io/jluza/${{steps.getname.outputs.pkgname}}:$FINAL_VERSION
