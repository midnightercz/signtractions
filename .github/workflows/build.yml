name: Automate Docker Image Build & Push to Quay.io Registry CI

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      release:
        required: true
        type: string

jobs:   
  tests:
    uses: ./.github/workflows/tox-tests.yml
  build:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ID }}
          password: ${{ secrets.QUAY_PW }}
      - uses: actions/checkout@v4
      - name: Get version and name
        id: getnameversion
        run: |
          pip install toml pytractions
          echo "installation done"
          cat pyproject.toml
          version=$(cat 'pyproject.toml' | python -c "import toml; import sys; print(toml.loads(sys.stdin.read())['project']['version'])")
          name=$(cat 'pyproject.toml' | python -c "import toml; import sys; print(toml.loads(sys.stdin.read())['project']['name'])")
          echo "version=$version"
          echo "name=$name"
          echo "version=$version" >> ${GITHUB_OUTPUT}
          echo "name=$name" >> ${GITHUB_OUTPUT}
          echo "get version done"
      - name: Get commit revision
        id: getrev
        run: echo "rev=$(git rev-parse --short HEAD)" >> ${GITHUB_OUTPUT}
      - name: Building & Pushing Docker Image
        run: |
          VERSION="${{ steps.getnameversion.outputs.version }}"
          RELEASE="${{ inputs.release }}"
          REV="${{ steps.getrev.outputs.rev }}"
          FINAL_VERSION=$([ "$RELEASE" = "true" ] && echo "${VERSION}" || echo "${VERSION}-${REV}")
          EXPIRE_LABEL=$([ "$RELEASE" = "true" ] && echo "" || echo "--label quay.expires-after=2d")
          FULL_VERSION="${VERSION}${REV}"
          pip install build
          pip install -r build-requirements.txt
          python -m build
          docker build -t ${{steps.getnameversion.outputs.name}}:base -f docker/Dockerfile.base .

          docker build --build-arg=SOURCE="dist/${{steps.getnameversion.outputs.name}}-${VERSION}.tar.gz" -t quay.io/jluza/${{steps.getnameversion.outputs.name}}:$FINAL_VERSION $EXPIRE_LABEL -f docker/Dockerfile .
          docker push quay.io/jluza/${{steps.getnameversion.outputs.name}}:$FINAL_VERSION
